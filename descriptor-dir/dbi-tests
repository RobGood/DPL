{
   "0-try-this.html" : "<a href='http:/api/eval/Examples/25-database-access~01'>try this</a>",
   "00-try-this" : "(= url http:/api/eval/Examples/25-database-access~01)\n(desc-read self dbi-tests)\n(hash-set $self / 0-try-this.html '<a href=\"$url\">try this</a>')\n(desc-write $self dbi-tests)",
   "_dateCreated" : "Tue Jan 11 16:03:19 2011",
   "_useCount" : 134,
   "on-load" : "(fn ()\n  (def-hash-fn $self /util db-query)\n\n  (def-fn pull-up (L)\n    (map-list (fn (_) (ith $_ 0)) $L))\n\n\n  (def-fn dbq-set-info (server name)\n    (= db-server $server)\n    (= db-name   $name)\n    ())\n\n  (dbq-set-info mysql:3306 DataBaseName)\n\n  (def-fn dbq (sql)\n    (db-query $db-server $db-name $sql -1))\n\n  (def-fn dbq-query (L fn sqlfmt) (map-list (fn (table-name)\n      (hash $table-name ($fn (dbq (sprintf $sqlfmt $table-name)))))\n    $L))\n\n  (def-fn dbq-tables  ()  (pull-up (dbq 'show tables')))\n  (def-fn dbq-counts  (L) (dbq-query $L pull-up \"select count(*) from %s;\"))\n  (def-fn dbq-columns (L) (dbq-query $L do      \"describe %s;\"))\n)",
   "rcs-id" : "$Id: dbi-tests,v 1.136 2012/03/07 06:13:05 apache Exp apache $",
   "util" : {
      "db-query" : "(def-fn db-set-credentials (username password)\n  (= *dbi-tests-username* $username)\n  (= *dbi-tests-password* $password)\n  ())\n\n(def-fn fail-if-any-changed-behavior ()\n  (if (|| (undef? $username) (undef? $password)) (do\n    (= msg (join '\\n' [ ''\n      ' ** No longer providing default credentials,'\n      ' ** Call (db-set-credentials -u- -p-) to set credentials...'\n      ''\n      @(callstack)\n    ]))\n    (report $msg)\n    (throw $msg)\n  ))\n)\n\n(fn (db-host db-name sql max) // (report ' >> (db-query ...)')\n  (= username $*dbi-tests-username*)\n  (= password $*dbi-tests-password*)\n  (fail-if-any-changed-behavior)\n\n  (= driver-name  mysql)\n  (= data-source (sprintf 'DBI:%s:%s:%s' $driver-name $db-name $db-host))\n\n  (= attrs (hash \n    PrintError  1\n    AutoCommit  1\n  ))\n\n  (= sql (trim $sql))\n\n  // Edit statement to add a limit clause to it if needed.\n  (if (defined? $max)\n   (if\n    (< $max 0) (= max ())\n    (do\n      (if (eq ';' (substr $sql -1)) (= sql (substr $sql 0 -1)))\n      (= sql \"$sql limit $max;\")\n      (= max ()))))\n\n  // (report 'sql: %s' $sql)\n\n  (= dbh (dbi-connect $data-source $username $password $attrs))\n  // (report '1.dbh: %s' $dbh)\n  (if (undef? $dbh)\n    (throw (sprintf 'Can\\'t connect to db at %s:%s'\n        $db-host $db-name)))\n        \n\n  (= sth (dbi-prepare $dbh $sql))\n  (dbi-st $sth execute)\n\n  (= n-rows (dbi-st $sth rows))\n  // (report  \"n-rows: $n-rows\")\n\n  (= out (list))\n  (= row (list ''))  // dummy list to get the loop started.\n\n  (= out (dbi-st $sth fetchall_arrayref))\n\n  (dbi-st $sth finish)\n  // (report '2.dbh: %s' $dbh)\n  (dbi-disconnect $dbh)\n\n  // (unshift $out (statistics))\n  (if (list-len (last $out)) () (pop $out))\n\n  $out\n)"
   }
}
