{
   "Latest-Changes" : "New: (rand-data) returns block of random data.\n\nNew: (^) returns xor of its two args.\n\nNew: (encrypt) (decrypt) use AES in CBC mode.\n  Crypt::CBC and Crypt::OpenSSL::AES added to depends.\n\nNew: (login) (logout) DPL user id support, auth, un-auth runtime modes.\n\nNew: (dpl-login) (dpl-logout) - user descriptor\n\nMods: (desc-to-string) now takes 'compact' as a boolean option.\n\nMods: (ii-new -name-) in auth mode puts inner desc-dir\n      under \".ii-user/$userid /$name\"  not \".ii/$name\"",
   "Log" : [
      {
         "0.8.43.403/2012-11-19" : "Mods: allow '%' in descriptor names.\n      allow '\\0' excape for nul byte.\n\nMods: eval endpoint textarea is sized to load=EXPRS input.\n\nMods: (start-worker) now prefixes its child process name with 'DPL'.\n\nNew: (assert) and (dbm-atomic) macros"
      },
      {
         "0.8.42.390/2012-10-11" : "Mods:  dple -- now shows descâ€™s rcs-id value below its name in header.\n\nFixes: added incl.src descriptor to DPL dist.\n       further encoding fixes for quoted strings containing utf-8.\n       better exception reporting in rep().\n\nMods: (=?) made into a macro so it may, or may not, eval its arg.\n\nMods: (def-fn) now records source desc name as attribute of fn name.\n\nNew: (html--wrapper) (deep-join) (sort-records).\n\nMods: (||) and (&&) if true now return first/last true value.\n\nFixed: (return) in macro now does the return in caller.\n\nNew: (get-called-fns) to support called function list in dple.\n\nNew: dple parses each field to show functions it calls, if possible,\n     cross referenced to source/man page.\n\nNew: (report-vars), (=?), finally added these ones.\n\nMods: (ii-new) & (ii-eval) added support for direct socket connection\n        to an ssh-accessed remote runtime.\n\nNew: (stop-worker) builtin complements (start-worker)\n\nMods: (var-push) and (var-pop) now take meta-variables too.\n\nMods: (map-list) now does multi-list input;\n  was only: (map-list (fn (arg) ...) $list)\n  now also: (map-list (fn (&args) ...) @$lists)"
      },
      {
         "0.8.40.362/2012-09-25" : "Variable names referenced in interpolated strings (i.e. \"val is $foo\")\ncan be wrapped in braces to separate variable name from trailing text\n(e.g. \"one-${two-three}-four\").  In fact variable names outside\ninterpolated string can be so wrapped too, but why would you?\nSupporting this mod is a change defining the value of a previously\nillegal single element hash to be its single element's value.\n\nBug fix, (hash-eval) now utf8 decodes its expression before evaling.\n\nBug fix, (def-hash-fn) now utf8 decodes value returned from (hash-eval).\n\nNew, (desc-as-of) builtin causes future calls to desc-read to retrieve\nthe specified descriptor as it was on the date given to this builtin.\n\nNew, (sort-alpha-reverse) and (sort-numeric-reverse) act as expected.\n\nClosed exploits found in (desc-read).\n\nDescriptors stored in UTF-8 now, not ascii with \\u encoding.\n\ndple, Primal - backgound colour change for better night vision.\n\ndplx - now shows a callstack on exceptions.\n\n(report) now auto utf8-decodes arguments as needed.\n\n(throw) now includes callstack info, available in (catch) handler as $_cs.\n\neval descriptor now utf8-decodes input and utf8-encodes output.\n\ndplx descriptor now handles utf8 better too."
      },
      {
         "0.8.39.355/2012-09-13" : "Bug fixed where (accumulate-time) showed .meta.\n\nAdded Crypt libraries to  (pm-new) whitelist.\n\nBug fixed for message sending pipe."
      },
      {
         "0.8.37.348/2012-06-21" : "New (++<varname>)\n    (<varname>++)\n    (--<varname>)\n    (<varname>--)  -- Aliases for corresponding increment/decrement functions,\n                      if not previously defined.\n\nNew (<number>) -- Returns numeric value of <number>, if not previous defined.\n\nNew (ngrams) -- calculate ngrams from input text.\n\nNew (histogram) -- calculate histograms from input lists.\n\nMods (pm-new) -- pmWhitelist can be appended to by dpli plugins.\n\nNew (fn?)  -- long missing predicate added.\n\nNew dpl-access -- optional access control mechanism.\n\nNew (start-worker) -- macro that evals its args in a cloned process.\n\nNew (accumulate-time) -- elapsed time profiling macro\n    (timings-report)  -- return and clear accumulated times\n\nMods dple -- Changed links to hyperlink blue.\n\nNew (hash-index) -- returns inverted index of paths by field name.\n\nNew (hash-subtract) -- returns differences between corresponding hash fields.\n\nMods (html-tidy) -- made optionally more aggresive.\n\nNew (fortune) -- returns your fortune, where fortunes are available."
      },
      {
         "0.8.34.340/2012-03-29" : "ChangeLog\n\nMods  dple - now shows a submap's README headline beside the submap's link.\n\nMods  (return) - can now return multiple values from a function,\n       which appear as multiple parameters where the function was called.\n\nMods  (def-hash-fn) - can now be given a hash as the -path- arg.\n      The hash keys are the paths and the hash values are lists of names at the path.\n      The previously needed sequence of calls can be factored into one call and the\n      coresponding hash made from the path/name args.\n\nNew   (isodate) - returns an ISO_8601 formated date/time string.\n\nMods  dple - 'current path' control is now a pull down menu rather than links."
      },
      {
         "0.8.33.333/2012-02-29" : "ChangeLog\n  New. HTML-macros now knows about RGB colour names/values.\n       e.g. (get-rgb-by-name DarkOliveGreen) returns 556B2F\n\n  Mods dpl  - added utf8 metatag to source\n       dple - added hostname to header\n\n       (deref-url)  : now observes Content-Encoding and auto gunzips body if needed.\n       (xml-encode) : now uses HTML::Entites for encoding\n       (xml-decode) : now uses HTML::Entites for decoding\n       (html-tidy)  : now also strips bogus '<header/>' tags.\n       (version)    : now also returns runtime environment language version\n\n  New. (fn-wrap -fn-name- -pre-fn- -post-fn)\n       Wrap function calls with pre and post functions.\n       -fn-name- is the name of the function to be wrapped.\n       -fn-pre-  is called with the list of args passed in the call\n                 and can modify the list.\n       -fn-post- is called with the return value of the wrapped function call.\n                 which can be modified or not, but should be returned.\n\n  New. List and Hash syntax.\n       [1 2 3]   is now equivalent to (list 1 2 3), and\n       {1 2 3 4} is now equivalent to (hash 1 2 3 4)\n\n  New. List interpolation, use a leading @ to read values from a list/hash\n       as if they has been inserted at that point in the pararmeter list.\n       (+ @[1 2 3]) is now equivalent to (+ 1 2 3)\n\n  New. Added a document to record changes to DPL system, sectioned by version,\n       and service to report change log at http://.../api/dplx/ChangeLog\n\n  Fixed typo, error handling in dple."
      },
      {
         "0.8.30.322/2012-01-26" : "List Interpolation\n  New. This has effect on expressions that are parameters to function calls.\n  If a '@' precedes such an expression, list interpolation is done.\n\n  If the expression evaluates to a list, the list elements are taken as\n  the function call parameters at that point in the argument list.\n\n  If the expression evaluates to a hash, the name/value pairs are taken\n  as the function call parameters  at that point in the argument list."
      }
   ],
   "README" : "This is a record of DPL changes by version, and a service to report the changes.\n\nThe idea is that new changes are noted top of the the box above, and that periodically\nthat text would be pulled into the log list by calling (add-latest-changes)\n\nNB: Roll changes here BEFORE deploying the next DPL version!",
   "_dateCreated" : "Wed Feb  1 11:27:44 2012",
   "_useCount" : 203,
   "api" : {
      "README" : "functions for rolling and reporting the ChangeLog",
      "add-latest-changes" : "/* run as:           ( or eval these expressions... )\n dpl -eval ' (desc-read self ChangeLog) (add-latest-changes) '\n*/\n\n(fn ( -- text)\n  (if (eq '' (= text (hash-clear $self / Latest-Changes))) (return))\n\n  (unshift (hash-get $self / Log) {(vers-string) $text})\n  (hash-set $self / Latest-Changes '')\n  (desc-write $self $self/name)\n)",
      "get-cl-report" : "(fn ( -- out text padding)\n  (= out [])\n  (= padding '    ')\n\n  (= text (hash-get $self / Latest-Changes))\n\n  (push $out\n    (sprintf 'DPL %s ChangeLog' (vers-string))\n    ''\n    'Latest Changes'\n    @(pad $padding $text)\n    ''\n  )\n\n  (foreach item (hash-get $self / Log)\n    (= vers (pop (hash-keys $item /)))\n    (= text (hash-get $item / $vers))\n    (push $out (sprintf '%s\\n%s\\n\\n'\n                 $vers\n                 (join '\\n' (pad '    ' $text)))))\n\n  $out)"
   },
   "main" : "(fn ( -- vers text)\n  (ct)(bl)\n\n  (map-list println (get-cl-report)))",
   "on-load" : "(fn ()\n  (def-hash-fn $self /api add-latest-changes)\n  (def-hash-fn $self /api get-cl-report)\n\n  (def-hash-fn $self /util vers-string)\n  (def-hash-fn $self /util pad)\n\n  (if (undef? (hash-get $self / Log))\n    (hash-set $self / Log [])))",
   "rcs-id" : "$Id: ChangeLog,v 1.216 2013/03/20 04:53:27 apache Exp apache $",
   "util" : {
      "pad" : "(fn (prefix text)\n  (map-list (fn (_) \"$prefix$_\")\n    (split '\\n' $text)))",
      "vers-string" : "(fn ( -- vers)\n  (= vers (version))\n  (sprintf '%s/%s'\n    (hash-get $vers / version)\n    (hash-get $vers / date)))"
   }
}
