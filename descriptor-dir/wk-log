{
   "README" : "This summarizes edit stats on descriptors under version control.",
   "_dateCreated" : "Mon Jan 31 12:29:41 2011",
   "_useCount" : 244,
   "do-rpt" : "(fn (m arg)\n  (if (defined? $arg) (= desc-spec $arg))\n\n  (= min-span (* $m 60))\n  (get-batched-rlog-records))",
   "full-rpt" : "// Thu Jan  5 11:05:04 2012\n// session: 31ac1b4181e3e4dc9ebf6dd07ca07268\n/* Usage:\n(desc-read _ wk-log)\n(desc-read _ pretty-print)\n\n(= spec dplx)\n\n(full-rpt $spec pprint-diffs)\n*/\n\n\n\n(fn (spec pp-fn)\n  (= raw-wk-log (do-rpt 20 $spec))\n  (= stats (shift $raw-wk-log))\n\n  // Get all desc names in raw-wk-log\n  (= all-desc-names (hash))\n  (foreach rec $raw-wk-log\n    (foreach d-name (hash-get (ith $rec 0) / diffs)\n      (hash-set $all-desc-names / $d-name 1)))\n  (= all-desc-names (sort-alpha (hash-keys $all-desc-names /)))\n\n  // Add a trailing record to handle end case.\n  (push $raw-wk-log (list (hash\n    interval-fr 1970-01-01T00:00:00\n    interval-to 1970-01-01T00:00:00\n    diffs $all-desc-names\n  )))\n\n  (= prev-fr-desc (hash))\n\n  (= out (foreach rec $raw-wk-log\n    (= diff-rec (ith $rec 0))\n\n    (= fr-date (hash-get $diff-rec / interval-fr))\n    (= to-date (hash-get $diff-rec / interval-to))\n\n    (foreach d-name (hash-get $diff-rec / diffs)   \n      (if (undef? (= d-to (hash-get $prev-fr-desc / $d-name))) \n        (desc-read d-to $d-name (hash no-on-load 1 reload 1 as-of $to-date)))\n\n      (desc-read d-fr $d-name (hash no-on-load 1 reload 1 as-of $fr-date))\n      (hash-set $prev-fr-desc / $d-name $d-fr)\n\n      (= fr-id (ith (split ' ' (hash-get $d-fr / rcs-id)) 2))\n      (= to-id (ith (split ' ' (hash-get $d-to / rcs-id)) 2))\n\n      (if (undef? $fr-id) (= fr-id 1.1))\n\n      (report ' -> %s r%s r%s' $d-name $fr-id $to-id)\n\n      (hash\n        0-d-name  $d-name\n        1-fr-id   $fr-id\n        2-to-id   $to-id\n        3-fr-date $fr-date\n        4-to-date $to-date\n        5-diffs   (catch\n                    ($pp-fn $d-name $fr-id $to-id)\n                    (hash exception $_err))  \n      )\n    )\n  ))\n\n\n  (hash\n    0-stats      $stats\n    1-raw-wk-log $raw-wk-log\n    2-out        $out\n  )\n)",
   "get-all-unsorted" : "(fn ()\n  (grep (fn (_) (hash? $_))\n    (map-list get-rlog (desc-list $desc-spec))))",
   "get-batched-rlog-records" : "(fn (-- out)\n  (= start-time (time))\n\n  // Go do that thing now.\n  (desc-rlog-diff-rec () (hash min-span $min-span))\n  (map-list desc-rlog-diff-rec (get-sorted-rlog-records))\n  (= results  (desc-rlog-diff-rec))\n\n  (= out      (hash-get $results / out))\n  (= bin      (hash-get $results / bin))\n  (= ttl-t    (+ 0 (hash-get $results / ttl-t)))\n  (= min-span (hash-get $results / min-span))\n  (= wk-log   (hash-get $results / wk-log))\n\n  (if (list-len $bin) (push $out $bin))\n\n  (map-list (fn (k)\n      (hash-set $wk-log / $k (+ 0 (hash-get $wk-log / $k))))\n    (hash-keys $wk-log /))\n\n  (= end-time   (time))\n\n  (unshift $out (hash\n    elapsed-t (+ 0 (sprintf '%.3f' (- $end-time $start-time)))\n    min-span  $min-span\n    n-bins    (list-len $out)\n    ttl-t     (+ 0 (sprintf '%.2f' (/ $ttl-t 3600)))\n    wk-log    $wk-log\n  ))\n\n  $out\n)",
   "get-merged-rlog-records" : "(fn ( -- out)\n  (= out (list))\n\n  (map-list (fn (rec)\n      (map-list (fn (item)\n          (push $out $item))\n        (hash-get $rec / rlog)))\n    (get-all-unsorted))\n\n  $out\n)",
   "get-rlog" : "(fn (name) (catch (desc-rlog $name) $_err))",
   "get-sorted-rlog-records" : "(fn () (sort-rlog (get-merged-rlog-records)))",
   "gp" : "(fn ()\n  (map-list (fn (m)\n      (report \" -- wk-log $m minute span...\")\n\n      (= out (do-rpt $m))\n      (= wk  (hash-get (first $out) / wk-log))\n      // (report (desc-to-string $wk))\n\n      (map-list (fn (date)\n          (= d-time (- (/ (date-to-time $date) 86400) 14827))\n           \n          (emitf '%.3f %s\\n' $d-time (hash-get $wk / $date)))\n        (sort-alpha (hash-keys $wk /)))\n\n      (emit '\\n'))\n    (list 5 10 15 20 30))\n)",
   "main" : "(fn ()\n  (= desc-spec (utf8-decode (urldecode (shift $path-list))))\n  (report 'desc-spec: %s' $desc-spec)\n\n  (= span 20)\n  (= out (list (do-rpt $span)))\n  (unshift $out (statistics))\n\n  (ct application/json)(bl)\n  (emit (desc-to-string $out))\n)",
   "on-load" : "(fn ()\n  (def-hash-fn $self / do-rpt)\n  (def-hash-fn $self / full-rpt)\n  (def-hash-fn $self / gp)\n  (def-hash-fn $self / get-rlog)\n  (def-hash-fn $self / get-all-unsorted)\n  (def-hash-fn $self / get-merged-rlog-records)\n  (def-hash-fn $self / get-sorted-rlog-records)\n  (def-hash-fn $self / get-batched-rlog-records)\n)",
   "rcs-id" : "$Id: wk-log,v 1.245 2012/05/08 02:02:09 apache Exp apache $",
   "rss" : {}
}
